//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-22781540
// Cuda compilation tools, release 9.0, V9.0.176
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_61
.address_size 64

	// .globl	_Z14mesh_intersecti
.global .align 1 .b8 vertexBuffer[1];
.global .align 1 .b8 normalBuffer[1];
.global .align 1 .b8 tangentBuffer[1];
.global .align 1 .b8 bitangentBuffer[1];
.global .align 1 .b8 texCoordBuffer[1];
.global .align 1 .b8 indexBuffer[1];
.global .align 4 .u32 hasTangentsAndBitangents;
.global .align 8 .b8 textureCoordinate[8];
.global .align 4 .b8 geometricNormal[12];
.global .align 4 .b8 shadingNormal[12];
.global .align 4 .b8 tangent[12];
.global .align 4 .b8 bitangent[12];
.global .align 4 .b8 ray[36];
.global .align 4 .b8 _ZN21rti_internal_typeinfo24hasTangentsAndBitangentsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17textureCoordinateE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15geometricNormalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13shadingNormalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7tangentE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bitangentE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 16 .b8 _ZN21rti_internal_typename24hasTangentsAndBitangentsE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename17textureCoordinateE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename15geometricNormalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename13shadingNormalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename7tangentE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9bitangentE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum24hasTangentsAndBitangentsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum17textureCoordinateE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15geometricNormalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13shadingNormalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7tangentE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bitangentE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic24hasTangentsAndBitangentsE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic17textureCoordinateE[28] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 116, 117, 114, 101, 67, 111, 111, 114, 100, 105, 110, 97, 116, 101, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic15geometricNormalE[26] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 78, 111, 114, 109, 97, 108, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic13shadingNormalE[24] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 78, 111, 114, 109, 97, 108, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic7tangentE[18] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 97, 110, 103, 101, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic9bitangentE[20] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 98, 105, 116, 97, 110, 103, 101, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation24hasTangentsAndBitangentsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17textureCoordinateE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15geometricNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13shadingNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7tangentE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bitangentE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];

.visible .entry _Z14mesh_intersecti(
	.param .u32 _Z14mesh_intersecti_param_0
)
{
	.reg .pred 	%p<18>;
	.reg .f32 	%f<215>;
	.reg .b32 	%r<49>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<130>;


	.loc 1 32 16
	ld.param.s32 	%rd6, [_Z14mesh_intersecti_param_0];
	.loc 5 217 5
	mov.u64 	%rd28, indexBuffer;
	cvta.global.u64 	%rd5, %rd28;
	mov.u32 	%r7, 1;
	mov.u32 	%r8, 12;
	mov.u64 	%rd27, 0;
	.loc 5 217 5
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r7, %r8, %rd6, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 34 15
	ld.s32 	%rd12, [%rd4];
	.loc 5 217 5
	mov.u64 	%rd29, vertexBuffer;
	cvta.global.u64 	%rd11, %rd29;
	.loc 1 35 15
	ld.s32 	%rd18, [%rd4+4];
	.loc 1 36 15
	ld.s32 	%rd24, [%rd4+8];
	.loc 5 217 5
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 34 17
	ld.f32 	%f26, [%rd10+8];
	ld.f32 	%f27, [%rd10+4];
	ld.f32 	%f28, [%rd10];
	.loc 5 217 5
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 35 17
	ld.f32 	%f29, [%rd16+8];
	ld.f32 	%f30, [%rd16+4];
	ld.f32 	%f31, [%rd16];
	.loc 5 217 5
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 41 5
	sub.ftz.f32 	%f32, %f31, %f28;
	sub.ftz.f32 	%f33, %f30, %f27;
	sub.ftz.f32 	%f34, %f29, %f26;
	.loc 1 36 17
	ld.f32 	%f35, [%rd22+8];
	ld.f32 	%f36, [%rd22+4];
	ld.f32 	%f37, [%rd22];
	.loc 1 41 5
	sub.ftz.f32 	%f38, %f28, %f37;
	sub.ftz.f32 	%f39, %f27, %f36;
	sub.ftz.f32 	%f40, %f26, %f35;
	mul.ftz.f32 	%f41, %f34, %f39;
	mul.ftz.f32 	%f42, %f33, %f40;
	sub.ftz.f32 	%f1, %f41, %f42;
	mul.ftz.f32 	%f43, %f32, %f40;
	mul.ftz.f32 	%f44, %f34, %f38;
	sub.ftz.f32 	%f2, %f43, %f44;
	mul.ftz.f32 	%f45, %f33, %f38;
	mul.ftz.f32 	%f46, %f32, %f39;
	sub.ftz.f32 	%f3, %f45, %f46;
	ld.global.f32 	%f47, [ray+12];
	ld.global.f32 	%f48, [ray+16];
	mul.ftz.f32 	%f49, %f48, %f2;
	fma.rn.ftz.f32 	%f50, %f47, %f1, %f49;
	ld.global.f32 	%f51, [ray+20];
	fma.rn.ftz.f32 	%f52, %f51, %f3, %f50;
	rcp.approx.ftz.f32 	%f53, %f52;
	ld.global.f32 	%f54, [ray];
	sub.ftz.f32 	%f55, %f28, %f54;
	ld.global.f32 	%f56, [ray+4];
	sub.ftz.f32 	%f57, %f27, %f56;
	ld.global.f32 	%f58, [ray+8];
	sub.ftz.f32 	%f59, %f26, %f58;
	mul.ftz.f32 	%f60, %f53, %f55;
	mul.ftz.f32 	%f61, %f53, %f57;
	mul.ftz.f32 	%f62, %f53, %f59;
	mul.ftz.f32 	%f63, %f48, %f62;
	mul.ftz.f32 	%f64, %f61, %f51;
	sub.ftz.f32 	%f65, %f63, %f64;
	mul.ftz.f32 	%f66, %f60, %f51;
	mul.ftz.f32 	%f67, %f62, %f47;
	sub.ftz.f32 	%f68, %f66, %f67;
	mul.ftz.f32 	%f69, %f61, %f47;
	mul.ftz.f32 	%f70, %f60, %f48;
	sub.ftz.f32 	%f71, %f69, %f70;
	mul.ftz.f32 	%f72, %f39, %f68;
	fma.rn.ftz.f32 	%f73, %f38, %f65, %f72;
	fma.rn.ftz.f32 	%f4, %f40, %f71, %f73;
	mul.ftz.f32 	%f74, %f33, %f68;
	fma.rn.ftz.f32 	%f75, %f32, %f65, %f74;
	fma.rn.ftz.f32 	%f5, %f34, %f71, %f75;
	mul.ftz.f32 	%f76, %f2, %f61;
	fma.rn.ftz.f32 	%f77, %f1, %f60, %f76;
	fma.rn.ftz.f32 	%f210, %f3, %f62, %f77;
	ld.global.f32 	%f78, [ray+32];
	setp.lt.ftz.f32	%p1, %f210, %f78;
	ld.global.f32 	%f79, [ray+28];
	setp.gt.ftz.f32	%p2, %f210, %f79;
	and.pred  	%p3, %p1, %p2;
	setp.ge.ftz.f32	%p4, %f4, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	setp.ge.ftz.f32	%p6, %f5, 0f00000000;
	and.pred  	%p7, %p5, %p6;
	add.ftz.f32 	%f80, %f4, %f5;
	setp.le.ftz.f32	%p8, %f80, 0f3F800000;
	and.pred  	%p9, %p7, %p8;
	@!%p9 bra 	BB0_15;
	bra.uni 	BB0_1;

BB0_1:
	.loc 5 257 5
	mov.u64 	%rd35, normalBuffer;
	cvta.global.u64 	%rd34, %rd35;
	// inline asm
	call (%rd30, %rd31, %rd32, %rd33), _rt_buffer_get_size_64, (%rd34, %r7, %r8);
	// inline asm
	.loc 1 43 13
	cvt.u32.u64	%r11, %rd30;
	setp.eq.s32	%p10, %r11, 0;
	@%p10 bra 	BB0_6;

	.loc 5 217 5
	// inline asm
	call (%rd36), _rt_buffer_get_64, (%rd34, %r7, %r8, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 44 25
	ld.f32 	%f82, [%rd36+8];
	ld.f32 	%f83, [%rd36+4];
	ld.f32 	%f84, [%rd36];
	.loc 5 217 5
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd34, %r7, %r8, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 45 25
	ld.f32 	%f85, [%rd42+8];
	ld.f32 	%f86, [%rd42+4];
	ld.f32 	%f87, [%rd42];
	.loc 5 217 5
	// inline asm
	call (%rd48), _rt_buffer_get_64, (%rd34, %r7, %r8, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 46 25
	ld.f32 	%f88, [%rd48+8];
	ld.f32 	%f89, [%rd48+4];
	ld.f32 	%f90, [%rd48];
	.loc 1 47 13
	mul.ftz.f32 	%f91, %f5, %f90;
	mul.ftz.f32 	%f92, %f5, %f89;
	mul.ftz.f32 	%f93, %f5, %f88;
	fma.rn.ftz.f32 	%f94, %f4, %f87, %f91;
	fma.rn.ftz.f32 	%f95, %f4, %f86, %f92;
	fma.rn.ftz.f32 	%f96, %f4, %f85, %f93;
	mov.f32 	%f97, 0f3F800000;
	.loc 1 47 13
	sub.ftz.f32 	%f98, %f97, %f4;
	sub.ftz.f32 	%f99, %f98, %f5;
	fma.rn.ftz.f32 	%f100, %f99, %f84, %f94;
	fma.rn.ftz.f32 	%f101, %f99, %f83, %f95;
	fma.rn.ftz.f32 	%f102, %f99, %f82, %f96;
	mul.ftz.f32 	%f103, %f101, %f101;
	fma.rn.ftz.f32 	%f104, %f100, %f100, %f103;
	fma.rn.ftz.f32 	%f105, %f102, %f102, %f104;
	rsqrt.approx.ftz.f32 	%f106, %f105;
	mul.ftz.f32 	%f211, %f106, %f100;
	mul.ftz.f32 	%f212, %f106, %f101;
	mul.ftz.f32 	%f213, %f106, %f102;
	.loc 1 48 13
	ld.global.f32 	%f10, [ray+12];
	ld.global.f32 	%f11, [ray+16];
	mul.ftz.f32 	%f107, %f11, %f212;
	fma.rn.ftz.f32 	%f108, %f10, %f211, %f107;
	ld.global.f32 	%f12, [ray+20];
	fma.rn.ftz.f32 	%f109, %f213, %f12, %f108;
	setp.ltu.ftz.f32	%p11, %f109, 0f00000000;
	@%p11 bra 	BB0_4;

	.loc 1 52 17
	mul.ftz.f32 	%f110, %f2, %f11;
	fma.rn.ftz.f32 	%f111, %f1, %f10, %f110;
	fma.rn.ftz.f32 	%f112, %f3, %f12, %f111;
	setp.ltu.ftz.f32	%p12, %f112, 0f00000000;
	.loc 1 53 21
	neg.ftz.f32 	%f113, %f1;
	.loc 1 52 17
	selp.f32	%f211, %f1, %f113, %p12;
	.loc 1 53 21
	neg.ftz.f32 	%f114, %f2;
	.loc 1 52 17
	selp.f32	%f212, %f2, %f114, %p12;
	.loc 1 53 21
	neg.ftz.f32 	%f115, %f3;
	.loc 1 52 17
	selp.f32	%f213, %f3, %f115, %p12;
	.loc 1 54 21
	cvt.ftz.f64.f32	%fd1, %f210;
	add.f64 	%fd2, %fd1, 0d3F50624DD2F1A9FC;
	.loc 1 57 21
	cvt.rn.ftz.f32.f64	%f210, %fd2;

BB0_4:
	.loc 5 257 5
	mov.u64 	%rd60, texCoordBuffer;
	cvta.global.u64 	%rd59, %rd60;
	mov.u32 	%r19, 8;
	.loc 5 257 5
	// inline asm
	call (%rd55, %rd56, %rd57, %rd58), _rt_buffer_get_size_64, (%rd59, %r7, %r19);
	// inline asm
	.loc 1 60 17
	cvt.u32.u64	%r20, %rd55;
	setp.ne.s32	%p13, %r20, 0;
	@%p13 bra 	BB0_6;

	.loc 1 61 17
	cvt.ftz.f64.f32	%fd3, %f210;
	add.f64 	%fd4, %fd3, 0d3F50624DD2F1A9FC;
	cvt.rn.ftz.f32.f64	%f210, %fd4;

BB0_6:
	.loc 5 329 5
	// inline asm
	call (%r21), _rt_potential_intersection, (%f210);
	// inline asm
	.loc 5 334 5
	setp.eq.s32	%p14, %r21, 0;
	.loc 3 1849 10
	@%p14 bra 	BB0_15;

	.loc 5 257 5
	// inline asm
	call (%rd61, %rd62, %rd63, %rd64), _rt_buffer_get_size_64, (%rd34, %r7, %r8);
	// inline asm
	.loc 1 66 18
	cvt.u32.u64	%r24, %rd61;
	setp.eq.s32	%p15, %r24, 0;
	@%p15 bra 	BB0_10;

	.loc 1 69 17
	st.global.f32 	[shadingNormal], %f211;
	st.global.f32 	[shadingNormal+4], %f212;
	st.global.f32 	[shadingNormal+8], %f213;
	.loc 1 71 17
	ld.global.u32 	%r25, [hasTangentsAndBitangents];
	setp.eq.s32	%p16, %r25, 0;
	@%p16 bra 	BB0_11;

	.loc 5 217 5
	mov.u64 	%rd103, tangentBuffer;
	cvta.global.u64 	%rd68, %rd103;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd68, %r7, %r8, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 72 33
	ld.f32 	%f117, [%rd67+8];
	ld.f32 	%f118, [%rd67+4];
	ld.f32 	%f119, [%rd67];
	.loc 5 217 5
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd68, %r7, %r8, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 73 33
	ld.f32 	%f120, [%rd73+8];
	ld.f32 	%f121, [%rd73+4];
	ld.f32 	%f122, [%rd73];
	.loc 5 217 5
	// inline asm
	call (%rd79), _rt_buffer_get_64, (%rd68, %r7, %r8, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 74 33
	ld.f32 	%f123, [%rd79+8];
	ld.f32 	%f124, [%rd79+4];
	ld.f32 	%f125, [%rd79];
	.loc 1 75 21
	mul.ftz.f32 	%f126, %f5, %f125;
	mul.ftz.f32 	%f127, %f5, %f124;
	mul.ftz.f32 	%f128, %f5, %f123;
	fma.rn.ftz.f32 	%f129, %f4, %f122, %f126;
	fma.rn.ftz.f32 	%f130, %f4, %f121, %f127;
	fma.rn.ftz.f32 	%f131, %f4, %f120, %f128;
	mov.f32 	%f132, 0f3F800000;
	.loc 1 75 21
	sub.ftz.f32 	%f133, %f132, %f4;
	sub.ftz.f32 	%f134, %f133, %f5;
	fma.rn.ftz.f32 	%f135, %f134, %f119, %f129;
	fma.rn.ftz.f32 	%f136, %f134, %f118, %f130;
	fma.rn.ftz.f32 	%f137, %f134, %f117, %f131;
	mul.ftz.f32 	%f138, %f136, %f136;
	fma.rn.ftz.f32 	%f139, %f135, %f135, %f138;
	fma.rn.ftz.f32 	%f140, %f137, %f137, %f139;
	rsqrt.approx.ftz.f32 	%f141, %f140;
	mul.ftz.f32 	%f142, %f141, %f135;
	mul.ftz.f32 	%f143, %f141, %f136;
	mul.ftz.f32 	%f144, %f141, %f137;
	st.global.f32 	[tangent], %f142;
	st.global.f32 	[tangent+4], %f143;
	st.global.f32 	[tangent+8], %f144;
	.loc 5 217 5
	mov.u64 	%rd104, bitangentBuffer;
	cvta.global.u64 	%rd86, %rd104;
	// inline asm
	call (%rd85), _rt_buffer_get_64, (%rd86, %r7, %r8, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 77 33
	ld.f32 	%f145, [%rd85+8];
	ld.f32 	%f146, [%rd85+4];
	ld.f32 	%f147, [%rd85];
	.loc 5 217 5
	// inline asm
	call (%rd91), _rt_buffer_get_64, (%rd86, %r7, %r8, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 78 33
	ld.f32 	%f148, [%rd91+8];
	ld.f32 	%f149, [%rd91+4];
	ld.f32 	%f150, [%rd91];
	.loc 5 217 5
	// inline asm
	call (%rd97), _rt_buffer_get_64, (%rd86, %r7, %r8, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 79 33
	ld.f32 	%f151, [%rd97+8];
	ld.f32 	%f152, [%rd97+4];
	ld.f32 	%f153, [%rd97];
	.loc 1 80 21
	mul.ftz.f32 	%f154, %f5, %f153;
	mul.ftz.f32 	%f155, %f5, %f152;
	mul.ftz.f32 	%f156, %f5, %f151;
	fma.rn.ftz.f32 	%f157, %f4, %f150, %f154;
	fma.rn.ftz.f32 	%f158, %f4, %f149, %f155;
	fma.rn.ftz.f32 	%f159, %f4, %f148, %f156;
	fma.rn.ftz.f32 	%f160, %f134, %f147, %f157;
	fma.rn.ftz.f32 	%f161, %f134, %f146, %f158;
	fma.rn.ftz.f32 	%f162, %f134, %f145, %f159;
	mul.ftz.f32 	%f163, %f161, %f161;
	fma.rn.ftz.f32 	%f164, %f160, %f160, %f163;
	fma.rn.ftz.f32 	%f165, %f162, %f162, %f164;
	rsqrt.approx.ftz.f32 	%f166, %f165;
	mul.ftz.f32 	%f167, %f166, %f160;
	mul.ftz.f32 	%f168, %f166, %f161;
	mul.ftz.f32 	%f169, %f166, %f162;
	st.global.f32 	[bitangent], %f167;
	st.global.f32 	[bitangent+4], %f168;
	st.global.f32 	[bitangent+8], %f169;
	bra.uni 	BB0_11;

BB0_10:
	.loc 1 67 17
	mul.ftz.f32 	%f170, %f2, %f2;
	fma.rn.ftz.f32 	%f171, %f1, %f1, %f170;
	fma.rn.ftz.f32 	%f172, %f3, %f3, %f171;
	rsqrt.approx.ftz.f32 	%f173, %f172;
	mul.ftz.f32 	%f174, %f1, %f173;
	mul.ftz.f32 	%f175, %f2, %f173;
	mul.ftz.f32 	%f176, %f3, %f173;
	st.global.f32 	[shadingNormal], %f174;
	st.global.f32 	[shadingNormal+4], %f175;
	st.global.f32 	[shadingNormal+8], %f176;

BB0_11:
	.loc 1 85 13
	mul.ftz.f32 	%f177, %f2, %f2;
	fma.rn.ftz.f32 	%f178, %f1, %f1, %f177;
	fma.rn.ftz.f32 	%f179, %f3, %f3, %f178;
	rsqrt.approx.ftz.f32 	%f180, %f179;
	mul.ftz.f32 	%f181, %f1, %f180;
	mul.ftz.f32 	%f182, %f2, %f180;
	mul.ftz.f32 	%f183, %f3, %f180;
	st.global.f32 	[geometricNormal], %f181;
	st.global.f32 	[geometricNormal+4], %f182;
	st.global.f32 	[geometricNormal+8], %f183;
	.loc 5 257 5
	mov.u64 	%rd110, texCoordBuffer;
	cvta.global.u64 	%rd109, %rd110;
	mov.u32 	%r39, 8;
	.loc 5 257 5
	// inline asm
	call (%rd105, %rd106, %rd107, %rd108), _rt_buffer_get_size_64, (%rd109, %r7, %r39);
	// inline asm
	.loc 1 88 17
	cvt.u32.u64	%r40, %rd105;
	setp.eq.s32	%p17, %r40, 0;
	@%p17 bra 	BB0_13;

	.loc 5 217 5
	// inline asm
	call (%rd111), _rt_buffer_get_64, (%rd109, %r7, %r39, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 94 29
	ld.v2.f32 	{%f184, %f185}, [%rd111];
	.loc 5 217 5
	// inline asm
	call (%rd117), _rt_buffer_get_64, (%rd109, %r7, %r39, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 95 29
	ld.v2.f32 	{%f188, %f189}, [%rd117];
	.loc 5 217 5
	// inline asm
	call (%rd123), _rt_buffer_get_64, (%rd109, %r7, %r39, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 96 29
	ld.v2.f32 	{%f192, %f193}, [%rd123];
	.loc 1 97 17
	mul.ftz.f32 	%f196, %f5, %f192;
	mul.ftz.f32 	%f197, %f5, %f193;
	fma.rn.ftz.f32 	%f198, %f4, %f188, %f196;
	fma.rn.ftz.f32 	%f199, %f4, %f189, %f197;
	mov.f32 	%f200, 0f3F800000;
	.loc 1 97 17
	sub.ftz.f32 	%f201, %f200, %f4;
	sub.ftz.f32 	%f202, %f201, %f5;
	fma.rn.ftz.f32 	%f203, %f202, %f185, %f199;
	fma.rn.ftz.f32 	%f204, %f202, %f184, %f198;
	.loc 1 99 17
	sub.ftz.f32 	%f205, %f200, %f203;
	.loc 1 97 17
	st.global.v2.f32 	[textureCoordinate], {%f204, %f205};
	bra.uni 	BB0_14;

BB0_13:
	mov.f32 	%f206, 0f00000000;
	.loc 1 90 17
	st.global.v2.f32 	[textureCoordinate], {%f206, %f206};

BB0_14:
	mov.u32 	%r48, 0;
	.loc 5 340 5
	// inline asm
	call (%r47), _rt_report_intersection, (%r48);
	// inline asm

BB0_15:
	.loc 1 105 1
	ret;
}

	// .globl	_Z11mesh_boundsiPf
.visible .entry _Z11mesh_boundsiPf(
	.param .u32 _Z11mesh_boundsiPf_param_0,
	.param .u64 _Z11mesh_boundsiPf_param_1
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<42>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<30>;


	ld.param.u64 	%rd3, [_Z11mesh_boundsiPf_param_1];
	.loc 1 109 22
	ld.param.s32 	%rd6, [_Z11mesh_boundsiPf_param_0];
	.loc 5 217 5
	mov.u64 	%rd28, indexBuffer;
	cvta.global.u64 	%rd5, %rd28;
	mov.u32 	%r7, 1;
	mov.u32 	%r8, 12;
	mov.u64 	%rd27, 0;
	.loc 5 217 5
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r7, %r8, %rd6, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 111 21
	ld.s32 	%rd12, [%rd4];
	.loc 5 217 5
	mov.u64 	%rd29, vertexBuffer;
	cvta.global.u64 	%rd11, %rd29;
	.loc 1 112 21
	ld.s32 	%rd18, [%rd4+4];
	.loc 1 113 21
	ld.s32 	%rd24, [%rd4+8];
	.loc 5 217 5
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 111 23
	ld.f32 	%f3, [%rd10+8];
	ld.f32 	%f2, [%rd10+4];
	ld.f32 	%f1, [%rd10];
	.loc 5 217 5
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 112 23
	ld.f32 	%f6, [%rd16+8];
	ld.f32 	%f5, [%rd16+4];
	ld.f32 	%f4, [%rd16];
	.loc 5 217 5
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	.loc 1 114 22
	sub.ftz.f32 	%f11, %f4, %f1;
	sub.ftz.f32 	%f12, %f5, %f2;
	sub.ftz.f32 	%f13, %f6, %f3;
	.loc 1 113 23
	ld.f32 	%f9, [%rd22+8];
	ld.f32 	%f8, [%rd22+4];
	ld.f32 	%f7, [%rd22];
	.loc 1 114 22
	sub.ftz.f32 	%f14, %f7, %f1;
	sub.ftz.f32 	%f15, %f8, %f2;
	sub.ftz.f32 	%f16, %f9, %f3;
	mul.ftz.f32 	%f17, %f12, %f16;
	mul.ftz.f32 	%f18, %f13, %f15;
	sub.ftz.f32 	%f19, %f17, %f18;
	mul.ftz.f32 	%f20, %f13, %f14;
	mul.ftz.f32 	%f21, %f11, %f16;
	sub.ftz.f32 	%f22, %f20, %f21;
	mul.ftz.f32 	%f23, %f11, %f15;
	mul.ftz.f32 	%f24, %f12, %f14;
	sub.ftz.f32 	%f25, %f23, %f24;
	mul.ftz.f32 	%f26, %f22, %f22;
	fma.rn.ftz.f32 	%f27, %f19, %f19, %f26;
	fma.rn.ftz.f32 	%f28, %f25, %f25, %f27;
	sqrt.approx.ftz.f32 	%f10, %f28;
	mov.pred 	%p5, 0;
	.loc 1 118 5
	setp.leu.ftz.f32	%p4, %f10, 0f00000000;
	@%p4 bra 	BB1_2;

	abs.ftz.f32 	%f29, %f10;
	setp.neu.ftz.f32	%p5, %f29, 0f7F800000;

BB1_2:
	.loc 1 109 22
	cvta.to.global.u64 	%rd2, %rd3;
	.loc 1 118 5
	@%p5 bra 	BB1_4;
	bra.uni 	BB1_3;

BB1_4:
	min.ftz.f32 	%f30, %f1, %f4;
	min.ftz.f32 	%f31, %f30, %f7;
	min.ftz.f32 	%f32, %f2, %f5;
	min.ftz.f32 	%f33, %f32, %f8;
	min.ftz.f32 	%f34, %f3, %f6;
	min.ftz.f32 	%f35, %f34, %f9;
	st.global.f32 	[%rd2], %f31;
	st.global.f32 	[%rd2+4], %f33;
	st.global.f32 	[%rd2+8], %f35;
	max.ftz.f32 	%f36, %f1, %f4;
	max.ftz.f32 	%f37, %f36, %f7;
	max.ftz.f32 	%f38, %f2, %f5;
	max.ftz.f32 	%f39, %f38, %f8;
	max.ftz.f32 	%f40, %f3, %f6;
	max.ftz.f32 	%f41, %f40, %f9;
	st.global.f32 	[%rd2+12], %f37;
	st.global.f32 	[%rd2+16], %f39;
	st.global.f32 	[%rd2+20], %f41;
	bra.uni 	BB1_5;

BB1_3:
	mov.u32 	%r9, 2096152002;
	.loc 1 125 9
	st.global.u32 	[%rd2+8], %r9;
	st.global.u32 	[%rd2+4], %r9;
	st.global.u32 	[%rd2], %r9;
	mov.u32 	%r10, -51331646;
	.loc 1 125 9
	st.global.u32 	[%rd2+20], %r10;
	st.global.u32 	[%rd2+16], %r10;
	st.global.u32 	[%rd2+12], %r10;

BB1_5:
	.loc 1 127 1
	ret;
}

	.file	1 "/home/will/WBK/SceneNet/dysonroboticslab-scenenetrgb-d-afb686496a4a/renderer/src/Geometry/TriangleMeshLayout.cu", 1563544303, 11815
	.file	2 "/usr/local/cuda-9.0/include/cuda_device_runtime_api.h", 1504348755, 14588
	.file	3 "/home/will/WBK/SceneNet/NVIDIA-OptiX-SDK-5.1.1-linux64/include/optix_device.h", 1539961758, 113713
	.file	4 "/home/will/WBK/SceneNet/NVIDIA-OptiX-SDK-5.1.1-linux64/include/internal/optix_datatypes.h", 1539961758, 5083
	.file	5 "/home/will/WBK/SceneNet/NVIDIA-OptiX-SDK-5.1.1-linux64/include/internal/optix_internal.h", 1539961758, 16357

